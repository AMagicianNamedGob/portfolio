---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import Link from "./Link.astro";

type ImageItem = {
  src: ImageMetadata | string;
  alt: string;
  width?: number;
  height?: number;
  /** Only used when src is ImageMetadata */
  format?: "webp" | "png" | "jpg" | "jpeg" | "avif";
  projectName: string;
  projectDescription: string;
  projectUrl: string;
};

interface Props {
  images: ImageItem[];
  class?: string;
}

const { images, class: className = "" } = Astro.props;
---

<div
  class:list={[
    "grid gap-4 xl:gap-16  grid-cols-[repeat(auto-fit,minmax(150px,1fr))] max-w-[90rem] mx-auto",
    className,
  ]}
>
  {
    images.map((img) => {
      return (
        <div class="overflow-hidden">
          <h3 class="ml-4">{img.projectName}</h3>
          <a
            class="text-theme-accent ml-2 rounded-sm px-1 inline-block"
            href={img.projectUrl}
            target="_blank"
            rel="noopener noreferrer"
          >
            <Image
              src={img.src as ImageMetadata}
              width={img.width ?? 500}
              height={img.height ?? 500}
              format={img.format ?? "webp"}
              alt={img.alt}
              class:list={[
                "object-cover border-4 border-theme-secondary hover:border-theme-primary hover:border-2 hover:scale-105 transition-all",
                { "rounded-theme": true },
              ]}
            />
          </a>
          <p class="text-theme-primary text-pretty ml-4">
            {img.projectDescription}
          </p>
        </div>
      );
    })
  }
</div>
